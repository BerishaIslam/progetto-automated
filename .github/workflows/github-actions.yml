name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: automated-api

jobs:
  build-and-deploy:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup env
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Convert repository name to lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

      - name: Create GitHub Release
        uses: actions/create-release@v1.1.4
        id: create_release
        with:
          tag_name: v${{ env.TAG }}
          release_name: "Release ${{ env.IMAGE_NAME }}:${{ env.TAG }}"
          body: |
            Docker image is available in the GitHub Container Registry.

            To pull the image:
            ```bash
            docker pull ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ```

            To run the image:
            ```bash
            docker run -p <your-port>:8080 -e SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/automated_db -e SPRING_DATASOURCE_USERNAME=postgres -e SPRING_DATASOURCE_PASSWORD=postgres ghcr.io/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
